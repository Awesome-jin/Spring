<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 1. 스프링에서 데이터베이스를 사용 할 때 접속 정보를 저장할 bean -->
	<bean class = "org.springframework.jdbc.datasource.DriverManagerDataSource"
	id="dataSource">
		<!-- 1-1.데이터베이스 종류 
		오라클이 아닌경우 value를 바꿔주면 된다.-->
		<property name="driverClassName"
		value="oracle.jdbc.driver.OracleDriver"></property>
		
		<!-- 1-2.데이터베이스 위치 -->
		<property name="url"
		value = "jdbc:oracle:thin:@211.183.6.60:1521:xe"></property>
		
		<!-- 1-3.계정과 비밀번호 -->
		<property name="username" value="user05"></property>
		<property name="password" value="user05"></property>	
	</bean>
	
	<!-- 2.MyBatis를 인터페이스를 이용해서 사용할때 필요한 Bean -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<!-- 2.1 property와 ref 설정. ref값이 1의 id와 같아야 한다! -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 3. Mapper 설정 -->
	<bean class="org.mybatis.spring.mapper.MapperFactoryBean" 
	id="coronaDao"> 
		<!-- 3.1 ref와 value이름 잘 체크하기 -->
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
		<property name="mapperInterface" value="db.mybatis.dao.CoronaDao"></property>
	</bean>
	
	<!-- 4.CoronaDao Bean : 이렇게 안하고 자동으로 만들어주는 방법이 있다.
	<bean id = "sample" class="db.mybatis.dao.CoronaDao"></bean> -->

	<!-- 5. 어노테이션 설정을 사용 할 수 있도록 해주는 태그 -->
	<context:annotation-config></context:annotation-config>
	
	<!-- 6.Bean 자동생성 패키지 등록 -->
	<context:component-scan base-package="db"></context:component-scan>
	
	<!-- 7.MyBatis 트랜잭션 적용을 위한 클래스 객체 생성 -->
	<bean id = "transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name = "dataSource" ref = "dataSource"></property>	
	</bean>
	
	<!-- 어노테이션으로 설정하기위한 설정 -->
	<tx:annotation-driven transaction-manager ="transactionManager"/>
</beans>
